<!DOCTYPE html>
<html>
  <head>
    <title>ACAO Radar</title>
    <meta name="description" content="ACAO Radar" />
    <meta name="keywords" content="" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=1200, initial-scale=0.5, minimum-scale=0.5, maximum-scale=1.5, user-scalable=yes">
    <%= favicon_link_tag 'favicon.png' %>
    <style type="text/css">
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0 }
      #map-canvas {
        height: 100%;
        width: 100%;
      }

      #map-canvas .label {
        color: black;
        background-color: white;
        opacity: .5;
      }

      #cam {
        width: 100%;
        height: 100%;
        background-color: grey;
      }
    </style>

  </head>
  <body>

    <table style="width: 100%; height: 100%;">
      <tr>
        <td style="width: 75%; height: 100%;"><div id="map-canvas"></div></td>
        <td><div id="cam">
<script type="text/javascript" src="/jwplayer/jwplayer.js"></script>
<script type="text/javascript">jwplayer.key="opiBO5hOcQSy8c43EjuWaaSwUxwYFKKu4B6NomhCsmI=";</script>

<div id="player">Loading the player...</div>
<script type="text/javascript">
    jwplayer("player").setup({
      title: 'ACAO Live Camera',
      width: '100%',
      autostart: true,
      image: '/acao.jpg',
      file: '/cam.m3u8'
    });
</script>
          </div>
        </td>
      </tr>
    </table>

    <script type="text/javascript" src="<%= request.protocol %>maps.googleapis.com/maps/api/js?sensor=false"></script>

    <% if @faye_source_uri %>
    <script type="text/javascript" src="<%= @faye_source_uri %>"></script>
    <% end %>

    <script src="/markerwithlabel.js" type="text/javascript"></script>

    <script type="text/javascript">

var faye = new Faye.Client('<%= @faye_interface_uri %>');

function initialize() {
  var map = new google.maps.Map(document.getElementById("map-canvas"), {
    center: new google.maps.LatLng(45.812709,8.763742),
    zoom: 16,
    mapTypeId: google.maps.MapTypeId.SATELLITE,
  });

  var circuitLayer = new google.maps.KmlLayer('<%= request.protocol %><%= request.host_with_port %>/circuit.kml');
  circuitLayer.setMap(map);

  new google.maps.Marker({
    position: new google.maps.LatLng(45.808025,8.772275),
    title: 'Camera 1',
    map: map
  });

  var iw = new google.maps.InfoWindow({
  });

  objects = {};
  station = {
    station_id: 'FLARM1',
    data: {},
  };

  faye.subscribe('/glideradar/events', function(message) {

    if (message.msg_type == 'station_update') {

console.log("STA", message.msg);
      station.data = message.msg;
      refreshStation(station);
    } else if (message.msg_type == 'traffic_update') {
      var keys = Object.keys(message.msg.objects);

      for (var i = 0 ; i< keys.length; i++) {
        var key = keys[i];
        var obj = objects[key];

        if (obj) {
          objects[key].data = message.msg.objects[key];
          objects[key].marker.setPosition(new google.maps.LatLng(objects[key].data.lat, objects[key].data.lng));
        } else {
          obj = {};
          obj.data = message.msg.objects[key];

          var marker = new MarkerWithLabel({
            position: new google.maps.LatLng(obj.data.lat, obj.data.lng),
            labelContent: key,
            labelClass: 'label',
            map: map
          });

          google.maps.event.addListener(marker, 'click', function (e) {
            iw.open(map, this);
            iw.setContent('Height: ' + obj.data.alt + ' m<br />Speed: ' + '0' + ' km/h<br />');
          });

          obj.marker = marker;

          objects[key] = obj;
        }
      }

      obj.last_update = new Date;

      refreshObject(obj);
    }
  }, null, function() {
    alert('Error subscribing to wall!');
  });

  setInterval(function() {
    var now = new Date;

    var keys = Object.keys(objects);
    for (var i = 0 ; i < keys.length; i++) {
      var key = keys[i];
      var obj = objects[key];

      if (now - obj.last_update > 10000) {
        obj.marker.setMap(null);
        delete objects[key];
      } else if (now - obj.last_update > 2000) {
        refreshObject(obj);
      }
    }
  }, 2000);

  function refreshObject(obj) {
    obj.marker.setIcon({
      path: 'M -5,0 5,0 M 0,-2 0,4 M -1,4 1,4 z',
      fillColor: 'white',
      strokeColor: 'white',
      strokeWeight: 2,
      scale: 6,
      rotation: obj.data.cog || 0,
      strokeOpacity: 1 - ((new Date - obj.last_update) / 10000),
    });
  }

  var fix_type = {
    0: 'Not available',
    1: 'Not available',
    2: '2D',
    3: '3D'
  };

  function refreshStation(obj) {
    var pos = new google.maps.LatLng(obj.data.lat, obj.data.lng);

    if (!obj.marker) {
      obj.marker = new google.maps.Marker({
        position: pos,
        title: obj.station_id,
        map: map
      });

      google.maps.event.addListener(obj.marker, 'click', function (e) {
        iw.open(map, this);
        iw.setContent(
          'Station: ' + obj.station_id + '<br />' +
          'GPS fix type: ' + fix_type[obj.data.gps_fix_type] + ' (' + obj.data.gps_sats + ' sats)<br />' +
          'GPS fix quality: ' + obj.data.gps_fix_qual + '<br />' +
          'GPS precision: ' + obj.data.gps_pdop + '<br />' +
          'Lat: ' + obj.data.lat + '<br />' +
          'Lng: ' + obj.data.lng + '<br />' +
          'Altitude: ' + obj.data.alt + '<br />'
        );
      });
    }

    obj.marker.setPosition(pos);
  }

}

google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </body>
</html>
